name: Build PST package documentation

on:
  push:
    branches:
      - "*"

jobs:
  texlive-cache:
    runs-on: ubuntu-latest
    name: Update TeX Live
    outputs:
      cache_key: ${{ steps.texlive.outputs.cache_key }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install TeX Live
        id: texlive
        uses: zauguin/install-texlive@experiment
        with:
          package_file: .github/tl_packages
          profile: .github/texlive.profile
  build-docs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - path: generic/pstricks-add
            document: pstricks-add-doc
            patch: add_documentmetadata.diff
          - path: generic/pst-3d
            document: pst-3d-doc
            patch: pst-3d.diff
#         - path: generic/pst-3dplot
#           document: pst-3dplot-doc
#           patch: pst-3dplot.diff
    name: "${{ matrix.document }}"
    needs: texlive-cache
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          path: luapstricks
      - name: Restore TeX Live from cache
        uses: actions/cache/restore@v3
        with:
          path: ~/texlive
          key: ${{ needs.texlive-cache.outputs.cache_key }}
          fail-on-cache-miss: true
      - run: echo $HOME/texlive/bin/x86_64-linux >> $GITHUB_PATH
      - run: l3build install
        working-directory: luapstricks
      - run: cp -R "$HOME/texlive/texmf-dist/doc/${{ matrix.path }}" document_dir
      - run: cp -R "$HOME/texlive/texmf-dist/doc/generic/pstricks/pst-doc.pdf" document_dir
      - name: Patch documentation
        if: matrix.patch
        working-directory: document_dir
        run: patch "${{ matrix.document }}.tex" "${{ github.workspace }}/luapstricks/.github/doc_patches/${{ matrix.patch }}"
      - name: Run latexmk
        working-directory: document_dir
        run: "latexmk -pdflua ${{ matrix.document }}"
      - name: Save resulting document 
        uses: actions/upload-artifact@v3
        with:
          name: documentation
          retention-days: 1
          path: document_dir/${{ matrix.document }}.pdf
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Pages branch
    needs: build-docs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: refs/heads/gh-pages
      - name: Delete old files in target directory
        run: rm -Rf "static/version/${{ github.ref_name }}"
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: documentation
          path: static/version/${{ github.ref_name }}/doc
      - name: Commit and push new Page
        run: git add "static/version/${{ github.ref_name }}" && git commit -m "Generated documentation from ${{ github.sha }}" && git push origin @:refs/heads/gh-pages
        env:
          GIT_AUTHOR_NAME: "${{ github.event.head_commit.author.name }}"
          GIT_AUTHOR_EMAIL: "${{ github.event.head_commit.author.email }}"
          GIT_COMMITTER_NAME: "${{ github.event.head_commit.committer.name }}"
          GIT_COMMITTER_EMAIL: "${{ github.event.head_commit.committer.email }}"
      - name: Trigger pusblishing workflow
        run: gh workflow run deploy-page.yaml --ref gh-pages
        env:
          GH_TOKEN: ${{ github.token }}
