name: Deploy SvelteKit site to Pages

on:
  push:
    branches: gh-pages
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: gh-pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: npm
      - name: Setup Pages
        uses: actions/configure-pages@v3
        with:
          static_site_generator: sveltekit
      - name: Install dependencies
        run: npm ci
      - name: Static HTML export with SvelteKit
        run: npm run build
      - uses: actions/upload-artifact@v3
        with:
          name: my-pages
          path: build/
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./build

  # Deployment job
  deploy-gh:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  # Deployment job
  deploy:
    environment:
      name: my-pages
      url: https://luapstricks.typesetting.eu
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: my-pages
      - name: Start SSH Agent
        run: |
          eval $(ssh-agent)
          echo SSH_AGENT_PID="$SSH_AGENT_PID" >> $GITHUB_ENV
          echo SSH_AUTH_SOCK="$SSH_AUTH_SOCK" >> $GITHUB_ENV
      - name: Save upload key
        run: printenv SSH_KEY | ssh-add -
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
      - name: Store known host key
        run: mkdir ~/.ssh && printenv SSH_KNOWN_HOSTS > "$HOME/.ssh/known_hosts"
        env:
          SSH_KNOWN_HOSTS: ${{ vars.SSH_KNOWN_HOSTS }}
      - name: Upload page
        run: rsync -av --delete -e "ssh -l \"$SSH_USER\"" ./ "$SSH_SERVER"::luapstricks/
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_SERVER: ${{ vars.SSH_SERVER }}
      - name: Stop SSH Agent
        if: always()
        run: |
          ssh-agent -k
